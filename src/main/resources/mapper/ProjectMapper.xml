<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="p1.teamtodo.project.ProjectMapper">

    <insert id="insProject" useGeneratedKeys="true" keyProperty="projectNo">
        INSERT INTO project (leader_no, title, description,	start_at, deadline)
        VALUES (#{signedUserNo}, #{title}, #{description}, #{startAt}, #{deadLine})
    </insert>

    <insert id="insUserProject">
        INSERT INTO user_project
        (user_no, project_no)
        VALUES
        <foreach collection="memberNoList" item="userNo" separator=",">
            ( #{userNo}, #{projectNo} )
        </foreach>
    </insert>

    <select id="selProjectDetail">
        SELECT
            p.project_no AS projectNo
            , p.leader_no AS leaderNo
            , p.title AS title
            , p.description AS description
            , p.start_at AS startAt
            , p.deadline AS deadLine
            , p.created_at AS createdAt
            , up.`lock` AS `lock`
            , SUM(S.checked)/COUNT(S.schedule_no)*100 AS userCompletePercent
            , (SELECT SUM(checked)/COUNT(schedule_no)
        FROM schedule A
        JOIN user_project B
            ON A.user_project_no=B.user_project_no
            AND B.project_no=p.project_no)*100 AS projectCompletePercent
        FROM project p
        JOIN user_project up
            ON p.project_no = up.project_no
        JOIN USER u
            ON u.user_no = up.user_no
        JOIN schedule S
            ON S.user_project_no=up.user_project_no
        WHERE p.project_no = #{projectNo}
            AND u.user_no = #{signedUserNo}
    </select>

<!--    수정 데이터 요청 -->
    <select id="selEditProjectDetail">
        SELECT
            title AS title
            , leader_no AS leaderNo
            , description AS description
            , start_at AS startAt
            , deadline AS deadLine
        FROM project
        WHERE project_no = #{projectNo}
    </select>

    <select id="participatingUser">
        SELECT EXISTS (
            SELECT user_no FROM user_project
            WHERE user_no = #{userNo}
                AND project_no = #{projectNo}
                AND `lock` = 0
        )AS RESULT
    </select>

    <select id="selProjectUsers">
        SELECT
            U.user_no AS userNo,
            U.nickname AS nickname,
            U.status_message AS statusMessage,
            U.profile_pic AS pic,
            UP.`lock` AS `lock`
        FROM `user` U
        JOIN user_project UP
            ON U.user_no = UP.user_no
        AND UP.project_no = #{projectNo}
    </select>

    <select id="selUserSchedules">
        SELECT
            UP.user_no AS userNo,
            S.schedule_no AS scheduleNo,
            S.content AS content,
            S.checked AS checked,
            S.created_at AS createdAt
        FROM schedule S
        JOIN user_project UP
            ON UP.user_project_no = S.user_project_no
        AND UP.project_no = #{projectNo}
        ORDER BY checked, schedule_no
    </select>

    <select id="selUserProjectList">
        SELECT
            P.project_no AS projectNo
            , P.title AS title
            , P.start_at AS startAt
            , P.deadline AS deadline
            , P.description AS description
            , P.project_complete AS projectComplete
        FROM project P
        JOIN user_project UP
            ON P.project_no = UP.project_no
            AND UP.user_no = #{userNo}
        WHERE UP.`lock` = 0
        ORDER BY projectNo ASC
        LIMIT #{startIdx}, #{size}
    </select>

    <select id="selProjectLeaderNo">
        SELECT EXISTS (
        SELECT 1
        FROM project
        WHERE project_no = #{projectNo}
            AND leader_no = #{signedUserNo}
        )AS RESULT
    </select>

    <update id="updProject">
        UPDATE project
        SET title = #{title}
            , description = #{description}
            , start_at = #{startAt}
            , deadline = #{deadLine}
        WHERE project_no = #{projectNo}
    </update>

<!--    수지 -->

    <update id="userLock">
        UPDATE user_project
        SET `lock`='1'
        WHERE user_no=#{targetUserNo}
            AND project_no = #{projectNo}
    </update>

    <update id="updProjectComplete">
        UPDATE project
            SET project_complete=1
        WHERE project_no=#{projectNo}
            AND NOT EXISTS (
                SELECT 1 FROM schedule S
                INNER JOIN user_project UP
                    ON UP.user_project_no=S.user_project_no
                WHERE project_no=#{projectNo}
                    AND S.checked=0
        )
    </update>

    <select id="checkDeadline">
        UPDATE project
        SET project_complete = 1
        WHERE deadline <![CDATA[ < ]]> CURDATE()
        AND project_complete = 0
    </select>

    <insert id="insUserProjectList">
        INSERT INTO user_project
        (user_no, project_no)
        VALUES
        <foreach collection="insertUserNoList" item="userNo" separator=",">
            (#{userNo}, #{projectNo})
        </foreach>
    </insert>

    <delete id="delUserProjectList">

        DELETE FROM user_project
        WHERE user_no IN (
            SELECT t1.user_no FROM user_project T1
            JOIN (
                SELECT up.user_project_no FROM schedule s
                RIGHT JOIN user_project up
                    ON up.user_project_no = s.user_project_no
                WHERE up.user_no IN
                <foreach collection="deleteUserNoList" item="userNo" separator="," open="(" close=")">
                    #{userNo}
                </foreach>
                    AND up.project_no = #{projectNo}
                    AND s.schedule_no IS NULL
            ) AS T2
            ON T1.user_project_no = T2.user_project_no
        )
        AND project_no = #{projectNo}
    </delete>

    <delete id="delProject">
        DELETE FROM project
        WHERE project_no = #{projectNo}
    </delete>
</mapper>