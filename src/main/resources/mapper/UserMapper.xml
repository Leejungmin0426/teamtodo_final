<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="p1.teamtodo.user.UserMapper">

    <insert id="insUser" useGeneratedKeys="true" keyProperty="userNo">
        INSERT INTO `user`
        SET user_id = #{userId}
            , password = #{password}
            , nickname = #{nickname}
            , email = #{email}
            , first_login = TRUE
    </insert>

    <select id="selUser">
        SELECT
            email
            , nickname
            , profile_pic AS pic
        FROM `user`
        WHERE nickname = #{nickname}
    </select>

    <select id="selUserIdByEmail">
        SELECT
            user_id AS userId
        FROM user
        WHERE email = #{email}
    </select>

    <select id="selUserByNickname">
        SELECT
        u.user_no AS userNo
        , u.nickname AS nickname
        , u.profile_pic AS pic
        FROM USER u
        WHERE nickname = #{nickname}
    </select>

    <select id="checkDuplicates">
        SELECT
            SUM(email = #{email}) AS emailCount
            , SUM(user_id = #{userId}) AS userIdCount
        FROM user
    </select>

    <select id="checkDuplicateNick" resultType="boolean">
        SELECT EXISTS (
            SELECT 1 FROM `user`
            WHERE nickname=#{nickname}
        )
    </select>

    <select id="checkDuplicateUserId">
        SELECT EXISTS (
            SELECT 1 FROM `user`
            WHERE user_id=#{userId}
        )
    </select>

    <update id="changeUserPw">
        UPDATE `user`
        SET password = #{password}
        WHERE email = #{email}
    </update>

    <!-- 1. 사용자 로그인 -->
    <select id="userSignIn">
        SELECT
            user_no AS userNo,
            password,
            first_login AS firstLogin
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="updFirstLogin">
        UPDATE `user`
            SET first_login = 0
        WHERE user_no = #{userNo}
    </select>


    <!-- 2. 사용자 정보 조회 -->
    <select id="selUserInfo">
        SELECT
            user_no AS userNo
            , email
            , user_id AS userId
            , nickname
            , status_message AS statusMessage
            , profile_pic AS pic
        FROM user
        WHERE user_no = #{targetUserNo}
    </select>

    <update id="editUser">
        UPDATE `user`
        SET nickname = #{nickname}
            , profile_pic = #{pic}
            , status_message = #{statusMessage}
        WHERE user_no = #{userNo}
    </update>

    <select id="selProjectEditUser">
        SELECT
            u.user_no AS userNo
            , u.nickname AS userNickname
            , u.profile_pic AS userPic
            , IF(s.schedule_no IS NULL, 0, 1) AS isExistSchedule
        FROM `user` u
        JOIN user_project up
            ON up.user_no = u.user_no
            AND up.project_no = #{projectNo}
        LEFT JOIN schedule s
            ON s.user_project_no = up.user_project_no
        GROUP BY u.user_no
    </select>

<!--    수지 -->
    <select id="leaderNo">
        SELECT
            leader_no
        FROM project
        WHERE project_no=#{projectNo}
    </select>
    <select id="scheduledAndLeaderNoFromScheduleNo">
        SELECT
            P.leader_no AS leaderNo
            , U.user_no AS scheduledNo
        from schedule S
        INNER JOIN user_project U
            ON U.user_project_no=S.user_project_no
        INNER JOIN project P
            ON P.project_no=U.project_no
        WHERE S.schedule_no=#{scheduleNo}
    </select>
</mapper>